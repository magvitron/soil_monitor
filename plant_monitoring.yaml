blueprint:
  name: "🌿 Plant Care Monitoring (with Soil Moisture)"
  description: "Monitor plant health and send notifications if conditions go out of range."
  domain: automation
  input:
    plant_name:
      name: "Plant Name"
      description: "Enter the name of your plant."
      selector:
        text:

    lumens_sensor:
      name: "Lumens Sensor"
      description: "Select the sensor that measures light (leave empty if not used)."
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: illuminance
          multiple: false
          filter:
            - enabled: true

    lumens_min:
      name: "Minimum Lumens"
      default: 2500
      selector:
        number:
          min: 0
          max: 20000
          step: 100

    lumens_max:
      name: "Maximum Lumens"
      default: 10000
      selector:
        number:
          min: 0
          max: 20000
          step: 100

    soil_temp_sensor:
      name: "Soil Temperature Sensor"
      description: "Select the soil temperature sensor (leave empty if not used)."
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: temperature
          multiple: false
          filter:
            - enabled: true

    soil_temp_min:
      name: "Minimum Soil Temperature (°C)"
      default: 18
      selector:
        number:
          min: 0
          max: 50
          step: 0.1

    soil_temp_max:
      name: "Maximum Soil Temperature (°C)"
      default: 26
      selector:
        number:
          min: 0
          max: 50
          step: 0.1

    humidity_sensor:
      name: "Humidity Sensor"
      description: "Select the humidity sensor (leave empty if not used)."
      default: ""
      selector:
        entity:
          domain: sensor
          device_class: humidity
          multiple: false
          filter:
            - enabled: true

    humidity_min:
      name: "Minimum Humidity (%)"
      default: 50
      selector:
        number:
          min: 0
          max: 100
          step: 1

    humidity_max:
      name: "Maximum Humidity (%)"
      default: 60
      selector:
        number:
          min: 0
          max: 100
          step: 1

    soil_ph_sensor:
      name: "Soil pH Sensor"
      description: "Select the soil pH sensor (leave empty if not used)."
      default: ""
      selector:
        entity:
          domain: sensor
          multiple: false
          filter:
            - enabled: true

    soil_ph_min:
      name: "Minimum Soil pH"
      default: 5.8
      selector:
        number:
          min: 3.0
          max: 10.0
          step: 0.1

    soil_ph_max:
      name: "Maximum Soil pH"
      default: 6.5
      selector:
        number:
          min: 3.0
          max: 10.0
          step: 0.1

    soil_moisture_sensor:
      name: "Soil Moisture Sensor"
      description: "Select the soil moisture sensor (leave empty if not used)."
      default: ""
      selector:
        entity:
          domain: sensor
          multiple: false
          filter:
            - enabled: true

    soil_moisture_min:
      name: "Minimum Soil Moisture (%)"
      default: 30
      selector:
        number:
          min: 0
          max: 100
          step: 1

    soil_moisture_max:
      name: "Maximum Soil Moisture (%)"
      default: 80
      selector:
        number:
          min: 0
          max: 100
          step: 1

    notify_device:
      name: "Notification Device"
      description: "Select a device to receive alerts."
      selector:
        device:
          integration: mobile_app
          multiple: false

mode: parallel

trigger:
  - platform: template
    value_template: "{{ lumens_sensor != '' and states(lumens_sensor) | float < lumens_min }}"
  - platform: template
    value_template: "{{ lumens_sensor != '' and states(lumens_sensor) | float > lumens_max }}"
  - platform: template
    value_template: "{{ soil_temp_sensor != '' and states(soil_temp_sensor) | float < soil_temp_min }}"
  - platform: template
    value_template: "{{ soil_temp_sensor != '' and states(soil_temp_sensor) | float > soil_temp_max }}"
  - platform: template
    value_template: "{{ humidity_sensor != '' and states(humidity_sensor) | float < humidity_min }}"
  - platform: template
    value_template: "{{ humidity_sensor != '' and states(humidity_sensor) | float > humidity_max }}"
  - platform: template
    value_template: "{{ soil_ph_sensor != '' and states(soil_ph_sensor) | float < soil_ph_min }}"
  - platform: template
    value_template: "{{ soil_ph_sensor != '' and states(soil_ph_sensor) | float > soil_ph_max }}"
  - platform: template
    value_template: "{{ soil_moisture_sensor != '' and states(soil_moisture_sensor) | float < soil_moisture_min }}"
  - platform: template
    value_template: "{{ soil_moisture_sensor != '' and states(soil_moisture_sensor) | float > soil_moisture_max }}"

action:
  - service: notify.mobile_app_{{ notify_device }}
    data:
      title: "⚠️ Plant Care Alert: {{ plant_name }}"
      message: >
        {% if trigger.entity_id == lumens_sensor %}
          Light levels are outside the ideal range ({{ states(lumens_sensor) | float }} lx).
        {% elif trigger.entity_id == soil_temp_sensor %}
          Soil temperature is outside the ideal range ({{ states(soil_temp_sensor) | float }}°C).
        {% elif trigger.entity_id == humidity_sensor %}
          Humidity levels are outside the ideal range ({{ states(humidity_sensor) | float }}%).
        {% elif trigger.entity_id == soil_ph_sensor %}
          Soil pH is outside the ideal range ({{ states(soil_ph_sensor) | float }}).
        {% elif trigger.entity_id == soil_moisture_sensor %}
          Soil moisture is outside the ideal range ({{ states(soil_moisture_sensor) | float }}%).
        {% endif %}
      data:
        clickAction: /lovelace/0
